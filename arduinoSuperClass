#include <ArduinoJson.h>
#include "DFRobotDFPlayerMini.h"
#include <Adafruit_NeoPixel.h>

//led소자수, 입력핀,
DFRobotDFPlayerMini myDFPlayer;

//*******************pinmode********************//
int led = 13;
int moveGetPin = 7;
int button = 10;

//**********************************************//
const String SSID = "SMHRD_강의실A"; // SMHRD_강의실A
const String PASSWORD = "aaaaa11111"; // aaaaa11111
// 서버주소와 포트 (변경할 부분)
const String SERVER_IP = "172.30.1.26"; // 172.30.1.15
const String SERVER_PORT = "8087";

// 전송 데이터 저장
String cmd = "";
// 전송할 데이터 저장
String sendData = "";
// WiFi 접속 실패 여부r
String jsonData = "";
// TX, RX
boolean FAIL_8266 = false;


String p_serialnum = "910-1";

//*******************setup()********************//
void setup() {

  pinMode(13, OUTPUT); // led
  pinMode(7, INPUT); // sensor
  Serial1.begin(9600); // myDFPlayer
  pinMode(10, INPUT); //button

  if (!myDFPlayer.begin(Serial1)) {  //Use softwareSerial to communicate with mp3.
    Serial.println(F("Unable to begin:"));
    Serial.println(F("1.Please recheck the connection!"));
    Serial.println(F("2.Please insert the SD card!"));
    while (true);
  }
  myDFPlayer.volume(20);


  Serial.println("Start module connection");
  do {
    Serial.begin(9600);
    Serial3.begin(9600);
    // ESP8266 모듈 재시작
    Serial3.println("AT+RST");
    delay(1000);
    // 만약 재시작되었다면
    if (Serial3.find("ready")) {
      Serial.println("Module ready");
      // ESP8266 모듈의 모드를 듀얼모드로 설정 (클라이언트)
      Serial3.println("AT+CWMODE=3");
      delay(1000);
      // AP에 접속되면
      if (cwJoinAP()) {
        Serial.println("AP successful");
        FAIL_8266 = false;
        delay(1000);
        Serial.println("Start buffer initialization");
        while (Serial3.available() > 0) {
          char a = Serial3.read();
          Serial.write(a);
        }//while끝
        Serial.println();
        Serial.println("Buffer initialization terminated");
      } else {
        Serial.println("AP connection failure");
        delay(1000);
        FAIL_8266 = true;
      }//else끝
    } else {
      Serial.println("Module connection failure");
      delay(1000);
      FAIL_8266 = true;
    }//else끝
  } while (FAIL_8266);
  Serial.println("Module connection complete");

  // myDFPlayer.volume(20);
  // myDFPlayer.play(1);

}//setup끝




String data = "";
String url = "";
boolean a = true;
String msg = "";
//서버에서 값을 받아와서 담아놓을 변수들
String sleep_time = ""; // 얘는 버튼 눌렸을 때임 그니까 필요없음 누르면 sp 체크하고 moveSensor값 체크시작하게 하면 됨.
String dayofs = ""; //사실상 포기하고 가야함
String sound = "";
String sleep_pattern = "";
String ledonoff = ""; //강제제어

//타이머기능 전역변수
int pre_time = 0;
int end_time = 0;
int cur_time = 0;
int timer = 0;
int wake_time = 0;
int fade_in = 5;//임시로 100초 //초로나옴 10분 20분 30분 *60 = 초
boolean tAndF = true;
int schedule = 6; //통신 때문에 미리 지정해놓음
int weather_sound = 1; //통신 때문에 미리 지정해놓음
boolean f = true;

void loop() {
  digitalWrite(13, 1);
  int btn = digitalRead(10);

  while (btn == 1) {
    digitalWrite(13, 0);
    data = "off";
    //  InputSensor("inSt",data); //통신때문에 임시로
    data = "";

    // 버튼 눌리는 순간부터 움직임 감지센서가 서버에 값을 보냄
    // int move_value = digitalRead(7);
    // data = (int)move_value;
    //InputSensor("input_Sensor", data)

    //취침시간을 서버로 보낸 다음 sleepTime- wakeTime = n초를 불러옴
    // n초로 타이머 시작
    //   sendDataToServer("getWt");
    //   Serial.println(msg);
    //   DynamicJsonBuffer jsonBuffer;
    //   JsonObject& root = jsonBuffer.parseObject(msg);
    //   String wt = root["wt"];
    //   wake_time = wt.toInt();

    wake_time = 10;//임시임시
    Serial.print("타이머 초(취침시간-기상시간=초) : ");//임시로 60초 넣어놓음
    Serial.println(wake_time);

    if (tAndF) { //a는 true
      // Serial.print("pre_time: ");
      pre_time = millis() * 0.001; //ms->s 1초씩 찍힌다.
      // Serial.println(pre_time);
      delay(1000);
      tAndF = false;
    }

    if (wake_time > 0) {
      Serial.print("wake_time 타이머 시작: ");
      end_time = millis() * 0.001;
      cur_time = end_time - pre_time;
      timer = wake_time - cur_time;
      Serial.println(timer);
      delay(1000);
    }

    while (timer <= fade_in & timer > 0) {
      int value = map(timer, fade_in, 0, 0, 255);
      analogWrite(13, value);
      Serial.print("wake_time 타이머: ");
      end_time = millis() * 0.001;
      cur_time = end_time - pre_time;
      timer = wake_time - cur_time;
      Serial.println(timer);
      delay(1000);
    }
    
    if (timer < 0) {
      digitalWrite(13,1);
      myDFPlayer.play(schedule);
      delay(9000);
      wake_time = 0;
      timer = 0;
      pre_time = 0;
      end_time = 0;
      cur_time = 0;
      timer = 0;
      wake_time = 0;
      tAndF = true;
      myDFPlayer.play(weather_sound);
      btn = digitalRead(10);
      if(btn ==0){
      break;  
      }
    }
  }//btn while 끝
}//loop문 끝

//*********************메서드들*********************//
//선생님꺼. 서버에서 값을 가져오는 메서드
void sendDataToServer(String url1) {
  url = url1;
  Serial.println("Start the data transfer part");
  cmd = "AT+CIPSTART=\"TCP\",\"" + SERVER_IP + "\"," + SERVER_PORT + "\r\n";
  Serial.println("Attempt to connect to server");
  delay(1000);
  Serial3.println(cmd);
  delay(1000);
  // 웹 서버에 접속되면
  if (Serial3.find("OK")) {
    Serial.println("Server connection successful");
  } else {
    Serial.println("Server connection failed");
  }

  // 서버로 GET 메시지 전송 (찬욱씨: 저희가 바꿀 거는 이거밖에 없어요)
  cmd = "GET /test/" + url + "?p_serialnum=" + p_serialnum; // uptime
  cmd += "\r\nConnection: close\r\n\r\n";

  Serial.println(cmd);
  Serial3.print("AT+CIPSEND=");
  Serial3.println(cmd.length());
  if (Serial3.find("OK")) {
    Serial.println("Ready to send to server");
  } else {
    Serial.println("Failed to prepare to send to server");
  }
  Serial3.println(cmd);

  //데이터 전송이 완료되면
  if (Serial3.find("OK")) {
    Serial.println("Data transfer successful");
    Serial.println();
    delay(1000);
    Serial.println("Attempt to receive data");
    boolean check = false;

    while (Serial3.available()) {
      char c = Serial3.read();
      Serial.print(c);
      if (c == '{') {
        check = true;
      }
      if (check) {
        msg += c;
      }
      if (c == '}') {
        check = false;
      }
    }
    Serial.println();
    Serial.println("End Receiving Data");
  } else {
    Serial.println("Data transfer failedxxxxxx");
    sendDataToServer(url);
  }
  delay(1000);
}

//**************
// 찬욱씨꺼. 서버에 값을 보내는 메서드 구 ex001
void InputSensor(String url1, String data1) { //찬욱씨가 서버에다가 값을 보내는 메서드//구 ex001
  url = url1;
  data = data1;
  Serial.println("===============================================================");
  Serial.println("Start the data transfer part");
  cmd = "AT+CIPSTART=\"TCP\",\"" + SERVER_IP + "\"," + SERVER_PORT + "\r\n";
  Serial.println("Attempt to connect to server");
  delay(1000);
  Serial3.println(cmd);
  delay(1000);
  // 웹 서버에 접속되면

  if (Serial3.find("OK")) {
    Serial.println(url + " Server connection successful");
  } else {
    Serial.println(url + "connection failed");
  }
  cmd = "GET /test/" + url + "?p_serialnum=910-1&data=" + data;
  cmd += "\r\nConnection: close\r\n\r\n";


  Serial.println(cmd);
  Serial3.print("AT+CIPSEND=");
  Serial3.println(cmd.length());
  if (Serial3.find("OK")) {
    Serial.println("Ready to inputSensor");
  } else {
    Serial.println("1 to prepare to send to 1");
  }
  Serial3.println(cmd);

  //데이터 전송이 완료되면
  if (Serial3.find("OK")) {
    Serial.println("Data transfer successful");
    Serial.println();
    delay(1000);
    Serial.println("Attempt to receive data");
    Serial.println();
    Serial.println("End Receiving Data");
  } else {
    Serial.println("Data transfer failed");
    InputSensor(url, data);
  }
  delay(1000);
}


//****************************


//********************************
//mp3모듈 메서드 loop문에서 사용합니다 String e를 넣으면 거기에 맞는 조건이 출력
void mp3player(int e) {

  myDFPlayer.volume(20); // 볼륨을 조절합니다. 0~30까지 설정이 가능합니다.

  switch (e) {
    case '1': //맑음
      myDFPlayer.play(1);
      break;
    case '2':  //흐림
      myDFPlayer.play(2);
      break;
    case '3':  // 비
      myDFPlayer.play(3);
      break;
    case '4':  //눈
      myDFPlayer.play(4);
      break;
    case '5': //왕좌
      myDFPlayer.play(5);
      break;
    case '6': //병원
      myDFPlayer.play(6);
      break;
  }
}


//********************************
//led 제어 메서드
void ledon() {

  // strip.begin(); //  Neopixel 제어를 시작
  // strip.show(); //  Neopixel 제어를 시작
  // strip.setBrightness(BRIGHTNESS);  //  BRIGHTNESS 만큼 밝기 설정

}

//****************************************
//서버에 자꾸 접속하는 메서드
boolean cwJoinAP() {
  String cmd = "AT+CWJAP=\"" + SSID + "\",\"" + PASSWORD + "\"";
  Serial3.println(cmd);
  if (Serial3.find("OK")) {
    return true;
  } else {
    return false;
  }
}

/////////////////
